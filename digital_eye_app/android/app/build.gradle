def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }



android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.digital.dryeye"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
   signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
    buildTypes {
        release {
           signingConfig signingConfigs.release
        }
    }

    dependencies {
       // api 'com.google.firebase:firebase-ml-vision-face-model:16.0.0'
        implementation 'com.android.support:multidex:1.0.3'
        implementation 'com.google.mlkit:face-detection:16.0.0'

    }
}

flutter {
    source '../..'
}

apply plugin: 'com.google.gms.google-services'
subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion 28
                buildToolsVersion '28.0.3'
            }
            configurations.all {
                resolutionStrategy {
                    force 'com.google.android.gms:play-services-gcm:16.1.0'
                    force 'com.google.android.gms:play-services-location:16.0.1'
                    force 'com.google.android.gms:play-services-basement:16.2.0'
                    force 'com.google.android.gms:play-services-auth:16.0.1'
                    force 'com.google.android.gms:play-services-stats:16.0.1'
                    force 'com.google.android.gms:play-services-base:16.0.1'
                }
            }
        }
    }
}